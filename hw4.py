'''

Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

'''
while True:
    program_title = input('Программа принимает действительное положительное число x и целое отрицательное число y.\n'
                          'Результатом работы является возведение числа x в ступень y\n'
                          'Всё понятно? (N/Y): ').upper()
    if program_title == 'N':
        print('Всё познаётся на опыте, давайте попробуем!')
        break
    elif program_title == 'Y':
        break
    else:
        print('Будем считать, что всё понятно!')
        break


# ---------------------------------первый способ----------------------------------

def my_func(x=float(input('Введите действительное положительное число: ')),
            y=int(input('Введите целое отрицательное число: '))):
    if x < 0 or y >= 0:
        return 'Ошибка, первое число должно быть положительное, второе отрицательное!'
    else:
        return x ** y  # без функции round для отображения очень маленьких чисел


print(my_func())


# __________________________________второй способ---------------------------------

def my_foo():
    try:
        x = float(input('Введите действительное положительное число: '))
        y = int(input('Введите целое отрицательное число: '))
        if x < 0 or y >= 0:
            return 'Ошибка, первое число должно быть положительное, второе отрицательное!'
        else:
            count = 0
            z = 1
            while True:
                result = x * z
                z = z * x
                count += 1
                if count == abs(y):
                    return round(1 / result, 4)
    except ValueError:
        return 'Ошибка: следует вводить числа!'


print(my_foo())
